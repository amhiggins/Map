<title> Points of Interest </title>

	<%= javascript_include_tag 'protovis.js' %>
    <script src="http://maps.google.com/maps?file=api&amp;v=2&amp;sensor=false&amp;key=ABQIAAAAYZ9eMYFYusxZt-1RKXLI7RQGpXqX26B62_lhdlIUxPTUm0CSORRw1BkwdprB1xQ3Xa8KfbgKAacxlw" type="text/javascript"></script>
	<%= javascript_include_tag 'backImages.js' %>
	<style type="text/css">
	

body, html {
  height: 100%;
  margin: 0;
}

#map {
  height: 80%;
  width: 80%
}

#map .canvas {
  position: absolute;
}

    </style>

    <script type="text/javascript+protovis">

	//the array from ruby of the mysql data
	var modMoreBackImages = new Array();
 modMoreBackImages = <%= raw @arrayPois %>;


/*
	Extra landmarks the map will render, these ones are specifically drawn for the city
*/
var backImages = [
  { id: "Red Robot Labs", lat: 37.819928, lon: -122.4786275,  url: "images\\landmark_ggb.png" }, 
  { id: "Golden Gate Bridge", lat: 37.424686, lon: -122.147224, url: "images\\landmark_rrl.png" },
  { id: "Seattle Space Needle", lat: 47.620519 , lon: -122.349256, url: "images\\landmark_space_needle.png" },
  { id: "Seattle Pacific Science Center", lat: 47.61921088014433 , lon: -122.35166788101196, url: "images\\seattle_pacific_science_center.png" },
  { id: "Seattle Space Needle", lat: 47.88688085106898 , lon: -105.31494140625, url: "images\\landmark_space_needle.png" },
  { id: "Seattle Music Project", lat: 47.62146716020692 , lon: -122.34832048416138, url: "images\\seattle_science_museum.png" },
  { id: "Seattle Aquarium", lat: 47.60747954750836, lon: -122.34261274337769, url: "images\\seattle_aquarium.png" },
  { id: "Seattle Pikes Place", lat: 47.60772548407546, lon: -122.34075665473938, url: "images\\seattle_pikes_place.png" },  
  { id: "Seattle Nindendo", lat: 47.65102121829412, lon: -122.13931202888489, url: "images\\seattle_nindendo.png" },
  { id: "Seattle Macrosoft ", lat: 47.64460287340262, lon: -122.13700532913208, url: "images\\seattle_macrosoft.png" },
  { id: "Washington University", lat: 47.65758330494931, lon: -122.30581283569336, url: "images\\seattle_washington_university.png" },
  { id: "Seattle Gas Works", lat: 47.64532569939822 , lon: -122.33486652374268, url: "images\\seattle_gasworks.png" },
  { id: "Seattle Columbia Building", lat: 47.60468012920853 , lon: -122.33066618442535, url: "images\\seattle_columbia_building.png" },
  { id: "Seattle Safeco Field", lat: 47.59144054050426 , lon: -122.33244180679321, url: "images\\seattle_safeco_field.png" },
  { id: "Seattle Benaroya Hall", lat: 47.60810162011777 , lon: -122.3367977142334, url: "images\\seattle_benaroya_hall.png" },
  { id: "Boeing Muesum", lat: 47.518417998541324 , lon: -122.29671478271484, url: "images\\seattle_boeing_museum.png" },
  { id: "Chittenden Locks", lat: 47.665990676529226 , lon: -122.39811301231384, url: "images\\seattle_chittenden_locks.png" },
  { id: "Google HQ", lat: 37.42206582174193 , lon: -122.08457350730896, url: "images\\google_headquarters.png" },
  { id: "Google amphitheater", lat: 37.42667534283453, lon: -122.08086133003235, url: "images\\google_amphitheatre.png" }, 
  { id: "Google geo home", lat: 37.42243220810658 , lon: -122.0880925655365, url: "images\\google_geo_home.png" }, 
  { id: "Google Android", lat: 37.420089008566386 , lon:  -122.08412289619446, url: "images\\google_android.png" }, 
  { id: "Google Cittenden", lat: 37.42641973911531 , lon:  -122.07149505615234, url: "images\\google_crittenden.png" }, 
  { id: "SJ airport", lat: 37.36169838235299 , lon: -121.92764282226562, url: "images\\l_airport.png" },  
  { id: "SF airport", lat: 37.61912651670701 , lon: -122.38168716430664, url: "images\\l_airport.png" },  
  { id: "Oakland airport", lat: 37.71478815132924 , lon: -122.21345901489258, url: "images\\l_airport.png" },  
  { id: "Portland airport", lat: 45.53743727875853 , lon: -122.94705390930176, url: "images\\l_airport.png" },  
  { id: "Seattle airport", lat: 47.53076330973474 , lon: -122.30117797851562, url: "images\\l_airport.png" },    
];

/*  function that changes the data thats rendered on map */
function Canvas(arr) {
  this.ucrimes = arr;
}

Canvas.prototype = pv.extend(GOverlay);

Canvas.prototype.initialize = function(map) {
  this.map = map;
  this.canvas = document.createElement("div");
  this.canvas.setAttribute("class", "canvas");
  map.getPane(G_MAP_MAP_PANE).parentNode.appendChild(this.canvas);
};


Canvas.prototype.redraw = function(force) {
  if (!force) return;
   c = this.canvas, m = this.map, r = 200;	//r changes how far the panel will be rendered/how far away from a crime a landmark will be rendered
	
	//used by backImages
	var hpixels = backImages.map(function(d) {
      return m.fromLatLngToDivPixel(new GLatLng(d.lat, d.lon));
    });
	
	//used by moreBackImages
	var ipixels = modMoreBackImages.map(function(d) {
      return m.fromLatLngToDivPixel(new GLatLng(d.lat, d.lon));
    });

  /* Update the canvas bounds. Note: may be large. */
  function x(p) p.x; function y(p) p.y;
  var x = { min: pv.min(hpixels, x) - r, max: pv.max(hpixels, x) + r };
  var y = { min: pv.min(hpixels, y) - r, max: pv.max(hpixels, y) + r };
  c.style.width = (x.max - x.min) + "px";
  c.style.height = (y.max - y.min) + "px";
  c.style.left = x.min + "px";
  c.style.top = y.min + "px";
 
 
  /* Render the visualization. */
 vis = new pv.Panel()
      .canvas(c)
      .left(-x.min)
      .top(-y.min)
	  
	vis.add(pv.Panel)
		.data(backImages)
	.add(pv.Image)
	 .width(50)
	 .height(50)

	.url(function(x, d) d.url)
    .left(function() hpixels[this.parent.index].x - 15)	//modified -15 to place image correctly
    .top(function() hpixels[this.parent.index].y - 10)		//modified -10 to place image correctly

	vis.add(pv.Panel)
		.data(modMoreBackImages)
	.add(pv.Image)
	 .width(40)
	 .height(40)
	//	.width(function(d) -x.min  ) 
	//	.height(function(d)  -y.min ) 

	.url(function(x, d) d.url)
    .left(function() ipixels[this.parent.index].x - 15)	//modified -15 to place image correctly
    .top(function() ipixels[this.parent.index].y - 10)		//modified -10 to place image correctly
	 
	.root.render();
};

/* Restrict minimum and maximum zoom levels. */
G_NORMAL_MAP.getMinimumResolution = function() 1;
G_NORMAL_MAP.getMaximumResolution = function() 18;



var map = new GMap2(document.getElementById("map"));
map.setCenter(new GLatLng(37.45, -122.13), 12);
map.setUI(map.getDefaultUI());
map.addOverlay(new Canvas(this.ucrimes));

   </script>
  </head>
  
  <body onunload="GUnload()">
	<br>
	<br>
	
	<div id="map"></div>
	<br>
  </body>
</html>


